name: PR Continuous Integration - Mobile App

on:
  push:
    branches: [ develop, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.5.3'
      - name : Lancer les tests
        run: flutter test

  build-android:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.5.3'

      - name: Get current timestamp
        id: getCurrentTimestamp
        run: echo "::set-output name=date::$(date +%s)"
      - name: Write google configuration
        shell: bash
        run: |
          mkdir android/app/src/staging
          echo "$STAGING_GOOGLE_SERVICE_B64" | base64 --decode > android/app/src/staging/google-services.json
        env:
          STAGING_GOOGLE_SERVICE_B64: ${{ secrets.STAGING_GOOGLE_SERVICE_B64 }}

      - name: Write key properties
        shell: bash
        run: |
          echo "$STAGING_KEY_PROPERTIES_B64" | base64 --decode > android/key.properties
        env:
          STAGING_KEY_PROPERTIES_B64: ${{ secrets.STAGING_KEY_PROPERTIES_B64 }}

      - name: Write key store
        shell: bash
        run: |
          mkdir android/keystore
          echo "$STAGING_KEYSTORE_B64" | base64 --decode > android/keystore/passemploi.jks
        env:
          STAGING_KEYSTORE_B64: ${{ secrets.STAGING_KEYSTORE_B64 }}

      - name: Write env
        shell: bash
        run: |
          echo "$STAGING_RUNTIME_ENV_B64" | base64 --decode > env/.env.staging
        env:
          STAGING_RUNTIME_ENV_B64: ${{ secrets.STAGING_RUNTIME_ENV_B64 }}

      - name: Build android apk
        run: |
          flutter pub get
          flutter build apk \
          --flavor staging \
          --build-number=${{ steps.getCurrentTimestamp.outputs.date }} \

      - name: Deploy android apk
        run: |
          curl -sL https://firebase.tools | bash
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-staging-release.apk \
            --token "$STAGING_FIREBASE_CI_TOKEN" \
            --app "$STAGING_ANDROID_APP_ID" \
            --groups "$STAGING_FIREBASE_RELEASE_GROUPS"
        env:
          STAGING_FIREBASE_CI_TOKEN: ${{ secrets.STAGING_FIREBASE_CI_TOKEN }}
          STAGING_ANDROID_APP_ID: ${{ secrets.STAGING_ANDROID_APP_ID }}
          STAGING_FIREBASE_RELEASE_GROUPS: ${{ secrets.STAGING_FIREBASE_RELEASE_GROUPS }}